services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    volumes:
      - ./mongo-data:/data/db # Host volume mounted to MongoDB container
    networks:
      - app_network

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    environment:
      MONGO_URL: mongodb://mongodb:27017/crm-app 
      PORT: 3001
      SESSION_SECRET: secret
    restart: always
    depends_on:
      - mongodb
    networks:
      - app_network

  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    environment:
      PORT: 3000
    restart: always
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - web
      - api
    networks:
      - app_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email {me.rahulkumar@icloud.com} -d {domain} --agree-tos
# volumes:
  # No named volume is required for MongoDB since we're using a host volume
  # mongo-data:

networks:
  app_network:
    driver: bridge
